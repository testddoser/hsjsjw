# ---------------------------------------------------------------------------------
#  ,_     _          
#  |\_,-~/          
#  / _  _ |    ,--.  üåê This module was loaded through https://t.me/hikkamods_bot
# (  @  @ )   / ,-'  üîì Not licensed.
#  \  _T_/-._( (     
#  /         `. \    ‚ö†Ô∏è Owner of this bot doesn't take responsibility for any
# |         _  \ |   errors caused by this module or this module being non-working
#  \ \ ,  /      |   and doesn't take ownership of any copyrighted material.
#   || |-_\__   /    
#  ((_/`(____,-'     
# ---------------------------------------------------------------------------------
# Name: IPLookup
# Description: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP –∞–¥—Ä–µ—Å–µ by @blazeftg
# Author: blazedzn
# Commands:
# .ip
# ---------------------------------------------------------------------------------

from .. import loader, utils
import requests


@loader.tds
class IPLookupMod(loader.Module):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± IP –∞–¥—Ä–µ—Å–µ by @blazeftg"""

    strings = {"name": "IPLookup"}

    async def ipcmd(self, message):
        """.ip <ip –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é>"""
        await message.edit(f"<b>–ü—Ä–æ–±–∏–≤ –æ—á–∫–∞...</b>")
        ip = utils.get_args_raw(message)
        is_proxy = False
        is_hosting = True
        if ip == "":
            await message.edit(f"<b>[–û—à–∏–±–∫–∞] –í–≤–µ–¥–∏ –∞–π–ø–∏ –¥–ª—è –ø—Ä–æ–±–∏–≤–∞ –±–ª—è—Ç–±.</b>")
            return
        else:
            response = requests.get(
                "http://ip-api.com/json/{ip}?fields=26404155".format(ip=ip)
            )
            if response.json()["status"] == "success":
                if response.json()["proxy"] == True:
                    is_proxy = "–î–∞"
                else:
                    is_proxy = "–ù–µ—Ç"
            else:
                pass
            if response.json()["status"] == "success":
                if response.json()["hosting"] == True:
                    is_hosting = "–î–∞"
                else:
                    is_hosting = "–ù–µ—Ç"
            else:
                pass
            if response.json()["status"] == "fail":
                await message.edit(
                    f"<b>[–û—à–∏–±–∫–∞] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É IP –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω–∞.\n–î–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ: </b>"
                    + f"<code>{response.json()['message']}</code>"
                )
                return
            else:
                await message.edit(
                    "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ IP: "
                    + f"<code>{str(response.json()['query'])}</code>"
                    + "\n–°—Ç—Ä–∞–Ω–∞: "
                    + f"<code>{str(response.json()['country'])}</code>"
                    + "\n–ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã: "
                    + f"<code>{str(response.json()['countryCode'])}</code>"
                    + "\n–û–±–ª–∞—Å—Ç—å: "
                    + f"<code>{str(response.json()['regionName'])}</code>"
                    + "\n–ì–æ—Ä–æ–¥: "
                    + f"<code>{str(response.json()['city'])}</code>"
                    + "\n–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: "
                    + f"<code>{str(response.json()['zip'])}</code>"
                    + "\n–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: "
                    + f"<code>{str(response.json()['timezone'])}</code>"
                    + "\n–í–∞–ª—é—Ç–∞: "
                    + f"<code>{str(response.json()['currency'])}</code>"
                    + "\n–ü—Ä–æ–≤–∞–π–¥–µ—Ä: "
                    + f"<code>{str(response.json()['org'])}</code>"
                    + "\n–Ø–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–∏—Å–æ–º? "
                    + f"<code>{str(is_proxy)}</code>"
                    + "\n–Ø–≤–ª—è–µ—Ç—Å—è —Ö–æ—Å—Ç–∏–Ω–≥–æ–º? "
                    + f"<code>{str(is_hosting)}</code>"
                )